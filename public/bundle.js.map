{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAO,IAAMA,MAAM,GAAG;AAClBC,EAAAA,WAAW,EAAE,GADK;AAElBC,EAAAA,UAAU,EAAE;AAFM,CAAf;;;;;;;;;;;;;;;;;;;;ACAA,IAAMC,UAAb;AAWI,wBAAc;AAAA;AAAG;;AAXrB;AAAA;AAAA,WAaI,gBAAa;AACTC,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAKC,OAA1C;AACAF,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKE,KAAxC;AACH;AAhBL;AAAA;AAAA,WAkBI,iBAAgBC,MAAhB,EAA6C;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB,EAA4B,MAA5B;AACH;AApBL;AAAA;AAAA,WAsBI,eAAcH,MAAd,EAA2C;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB,EAA4B,IAA5B;AACH;AAxBL;AAAA;AAAA,WAGI,uBAAyD;AACrD,UAAI,CAACR,UAAU,CAACS,QAAhB,EAA0B;AACtBT,QAAAA,UAAU,CAACS,QAAX,GAAsB,IAAIT,UAAJ,EAAtB;AACH;;AAED,aAAOA,UAAU,CAACS,QAAlB;AACH;AATL;;AAAA;AAAA;;;;;;;;;;;;;;ACAO,IAAKC,MAAZ;;WAAYA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;GAAAA,WAAAA;;;;;;;;;;;;;;;;;;;;;;ACAZ;AACA;AAGO,IAAMC,QAAb;AAcI,sBAAc;AAAA;AAAG;;AAdrB;AAAA;AAAA,WAgBI,gBAAa;AACT,WAAKC,MAAL,GAAcX,QAAQ,CAACY,cAAT,CAAwB,QAAxB,CAAd;AACA,WAAKC,GAAL,GAAW,KAAKF,MAAL,CAAYG,UAAZ,CAAuB,IAAvB,CAAX;AAEA,WAAKH,MAAL,CAAYI,MAAZ,GAAqBnB,oEAArB;AACA,WAAKe,MAAL,CAAYK,KAAZ,GAAoBpB,mEAApB;AACH;AAtBL;AAAA;AAAA,WAwBI,oBAAWqB,KAAX,EAAsC;AAClC,WAAKC,WAAL,CAAiBD,KAAjB;AACA,WAAKE,UAAL,CAAgBF,KAAhB;AACA,WAAKG,YAAL,CAAkBH,KAAlB;AACH;AA5BL;AAAA;AAAA,WA8BI,qBAAoBA,KAApB,EAA+C;AAC3C,WAAKJ,GAAL,CAASQ,SAAT,GAAqBZ,8DAArB;AACA,WAAKI,GAAL,CAASU,QAAT,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,KAAKZ,MAAL,CAAYK,KAApC,EAA2C,KAAKL,MAAL,CAAYI,MAAvD;AAEA,WAAKF,GAAL,CAASQ,SAAT,GAAqBZ,8DAArB;AACA,WAAKI,GAAL,CAASU,QAAT,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,KAAKZ,MAAL,CAAYK,KAApC,EAA2C,KAAKL,MAAL,CAAYI,MAAvD;AACH;AApCL;AAAA;AAAA,WAsCI,oBAAmBE,KAAnB,EAA8C;AAC1C,UAAMO,IAAI,GAAGP,KAAK,CAACO,IAAN,CAAW,CAAX,CAAb;AACA,UAAMC,KAAK,GAAG,KAAKd,MAAL,CAAYK,KAAZ,GAAoBC,KAAK,CAACS,QAAxC;AACA,UAAMC,KAAK,GAAG,KAAKhB,MAAL,CAAYI,MAAZ,GAAqBE,KAAK,CAACS,QAAzC;AAEA,WAAKb,GAAL,CAASQ,SAAT,GAAqBZ,gEAArB;AACA,WAAKI,GAAL,CAASU,QAAT,CAAkBC,IAAI,CAACK,CAAL,GAASJ,KAA3B,EAAkCD,IAAI,CAACM,CAAL,GAASH,KAA3C,EAAkDF,KAAlD,EAAyDE,KAAzD;AACH;AA7CL;AAAA;AAAA,WA+CI,sBAAqBV,KAArB,EAAgD;AAC5C,UAAMc,MAAM,GAAGd,KAAK,CAACc,MAArB;AACA,UAAMN,KAAK,GAAG,KAAKd,MAAL,CAAYK,KAAZ,GAAoBC,KAAK,CAACS,QAAxC;AACA,UAAMC,KAAK,GAAG,KAAKhB,MAAL,CAAYI,MAAZ,GAAqBE,KAAK,CAACS,QAAzC;AAEA,WAAKb,GAAL,CAASQ,SAAT,GAAqBZ,kEAArB;AACA,WAAKI,GAAL,CAASU,QAAT,CAAkBQ,MAAM,CAACE,GAAP,CAAWJ,CAAX,GAAeJ,KAAjC,EAAwCM,MAAM,CAACE,GAAP,CAAWH,CAAX,GAAeH,KAAvD,EAA8DF,KAA9D,EAAqEE,KAArE;AACH;AAtDL;AAAA;AAAA,WAGI,uBAAuD;AACnD,UAAI,CAACjB,QAAQ,CAACF,QAAd,EAAwB;AACpBE,QAAAA,QAAQ,CAACF,QAAT,GAAoB,IAAIE,QAAJ,EAApB;AACH;;AAED,aAAOA,QAAQ,CAACF,QAAhB;AACH;AATL;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACFO,IAAM0B,KAAb;AAaI,mBAAc;AAAA;AAEb;;AAfL;AAAA;AAAA,WAiBI,gBAAa;AACT,WAAKjB,KAAL,GAAa;AACTc,QAAAA,MAAM,EAAE;AACJE,UAAAA,GAAG,EAAE;AACDJ,YAAAA,CAAC,EAAE,CADF;AAEDC,YAAAA,CAAC,EAAE;AAFF,WADD;AAKJK,UAAAA,GAAG,EAAE;AACDN,YAAAA,CAAC,EAAE,CADF;AAEDC,YAAAA,CAAC,EAAE;AAFF;AALD,SADC;AAWTN,QAAAA,IAAI,EAAE,CACF;AACIK,UAAAA,CAAC,EAAE,CADP;AAEIC,UAAAA,CAAC,EAAE;AAFP,SADE,CAXG;AAiBTJ,QAAAA,QAAQ,EAAE;AAjBD,OAAb;AAmBH;AArCL;AAAA;AAAA,WAuCI,oBAAyB;AACrB,aAAO,KAAKT,KAAZ;AACH;AAzCL;AAAA;AAAA,WAGI,uBAAoD;AAChD,UAAI,CAACiB,KAAK,CAAC1B,QAAX,EAAqB;AACjB0B,QAAAA,KAAK,CAAC1B,QAAN,GAAiB,IAAI0B,KAAJ,EAAjB;AACH;;AAED,aAAOA,KAAK,CAAC1B,QAAb;AACH;AATL;;AAAA;AAAA;;;;;;UCFA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;CAGA;;AAEA,IAAM4B,QAAQ,GAAG1B,2DAAA,EAAjB;AACA,IAAM4B,UAAU,GAAGvC,+DAAA,EAAnB;AACA,IAAMkB,KAAK,GAAGiB,qDAAA,EAAd;AAEAjB,KAAK,CAACsB,IAAN;AACAH,QAAQ,CAACG,IAAT;AACAD,UAAU,CAACC,IAAX;AAEAH,QAAQ,CAACI,UAAT,CAAoBvB,KAAK,CAACwB,QAAN,EAApB,E","sources":["webpack://browser-game/./src/front-end/consts/config.const.ts","webpack://browser-game/./src/front-end/controller.ts","webpack://browser-game/./src/front-end/enums/colors.enum.ts","webpack://browser-game/./src/front-end/renderer.ts","webpack://browser-game/./src/front-end/state.ts","webpack://browser-game/webpack/bootstrap","webpack://browser-game/webpack/runtime/define property getters","webpack://browser-game/webpack/runtime/hasOwnProperty shorthand","webpack://browser-game/webpack/runtime/make namespace object","webpack://browser-game/./src/front-end/index.ts"],"sourcesContent":["export const Config = {\r\n    worldHeight: 600,\r\n    worldWidth: 600\r\n}","export class Controller {\r\n    private static instance: typeof Controller.prototype;\r\n\r\n    public static getInstance(): typeof Controller.prototype {\r\n        if (!Controller.instance) {\r\n            Controller.instance = new Controller();\r\n        }\r\n\r\n        return Controller.instance;\r\n    }\r\n\r\n    constructor() { }\r\n\r\n    init(): void {\r\n        document.addEventListener('keydown', this.keyDown);\r\n        document.addEventListener('keyup', this.keyUp);\r\n    }\r\n\r\n    private keyDown($event: KeyboardEvent): void {\r\n        console.log($event.keyCode, 'down');\r\n    }\r\n\r\n    private keyUp($event: KeyboardEvent): void {\r\n        console.log($event.keyCode, 'up')\r\n    }\r\n}","export enum Colors {\r\n    BgColor = '#231f20',\r\n    PlayerColor = '#c2c2c2',\r\n    ItemColor = '#e66916'\r\n}","import { Colors } from \"./enums/colors.enum\";\r\nimport { Config } from \"./consts/config.const\";\r\nimport { GameStateDto } from \"../shared/models/game-state-dto.model\";\r\n\r\nexport class Renderer {\r\n    private static instance: typeof Renderer.prototype;\r\n\r\n    public static getInstance(): typeof Renderer.prototype {\r\n        if (!Renderer.instance) {\r\n            Renderer.instance = new Renderer();\r\n        }\r\n\r\n        return Renderer.instance;\r\n    }\r\n\r\n    private canvas: HTMLCanvasElement;\r\n    private ctx: CanvasRenderingContext2D;\r\n\r\n    constructor() { }\r\n\r\n    init(): void {\r\n        this.canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n        this.ctx = this.canvas.getContext('2d');\r\n\r\n        this.canvas.height = Config.worldHeight;\r\n        this.canvas.width = Config.worldWidth;\r\n    }\r\n\r\n    renderGame(state: GameStateDto): void {\r\n        this.renderWorld(state);\r\n        this.renderFood(state);\r\n        this.renderPlayer(state);\r\n    }\r\n\r\n    private renderWorld(state: GameStateDto): void {\r\n        this.ctx.fillStyle = Colors.BgColor;\r\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        this.ctx.fillStyle = Colors.BgColor;\r\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n\r\n    private renderFood(state: GameStateDto): void {\r\n        const food = state.food[0];\r\n        const sizeW = this.canvas.width / state.gridSize;\r\n        const sizeH = this.canvas.height / state.gridSize;\r\n\r\n        this.ctx.fillStyle = Colors.ItemColor;\r\n        this.ctx.fillRect(food.x * sizeW, food.y * sizeH, sizeW, sizeH);\r\n    }\r\n\r\n    private renderPlayer(state: GameStateDto): void {\r\n        const player = state.player;\r\n        const sizeW = this.canvas.width / state.gridSize;\r\n        const sizeH = this.canvas.height / state.gridSize;\r\n\r\n        this.ctx.fillStyle = Colors.PlayerColor;\r\n        this.ctx.fillRect(player.pos.x * sizeW, player.pos.y * sizeH, sizeW, sizeH);\r\n    }\r\n}\r\n","import { GameStateDto } from \"../shared/models/game-state-dto.model\";\r\n\r\nexport class State {\r\n    private static instance: typeof State.prototype;\r\n\r\n    public static getInstance(): typeof State.prototype {\r\n        if (!State.instance) {\r\n            State.instance = new State();\r\n        }\r\n\r\n        return State.instance;\r\n    }\r\n\r\n    private state: GameStateDto;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    init(): void {\r\n        this.state = {\r\n            player: {\r\n                pos: {\r\n                    x: 5,\r\n                    y: 10,\r\n                },\r\n                vel: {\r\n                    x: 0,\r\n                    y: 0\r\n                }\r\n            },\r\n            food: [\r\n                {\r\n                    x: 7,\r\n                    y: 7\r\n                }\r\n            ],\r\n            gridSize: 20\r\n        }\r\n    }\r\n\r\n    getState(): GameStateDto {\r\n        return this.state;\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// import { Colors } from \"./enums/colors.enum\";\r\n// import { GameStateDto } from \"./models/game-state-dto.model\";\r\nimport { Controller } from \"./controller\";\r\nimport { Renderer } from \"./renderer\";\r\nimport { State } from \"./state\";\r\n\r\n// const gameScreen = document.getElementById('game-screen');\r\n\r\nconst renderer = Renderer.getInstance();\r\nconst controller = Controller.getInstance();\r\nconst state = State.getInstance();\r\n\r\nstate.init();\r\nrenderer.init();\r\ncontroller.init();\r\n\r\nrenderer.renderGame(state.getState());"],"names":["Config","worldHeight","worldWidth","Controller","document","addEventListener","keyDown","keyUp","$event","console","log","keyCode","instance","Colors","Renderer","canvas","getElementById","ctx","getContext","height","width","state","renderWorld","renderFood","renderPlayer","fillStyle","BgColor","fillRect","food","sizeW","gridSize","sizeH","ItemColor","x","y","player","PlayerColor","pos","State","vel","renderer","getInstance","controller","init","renderGame","getState"],"sourceRoot":""}